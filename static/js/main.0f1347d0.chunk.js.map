{"version":3,"sources":["api.js","index.js"],"names":["instance","require","create","baseURL","search","keywords","page","sort","order","search_string","join","String","get","parse_response","response","data","items","map","full_name","html_url","stargazers_count","description","language","get_issues","repo","query_str","parse_issues","issues","new_issues","title","labels","issue","label","name","then","console","log","SearchForm","onSubmit","this","props","handleSubmit","className","type","placeholder","value","input_value","onChange","handleChange","React","Component","Header","inputValue","Issue","href","IssueRows","p","i","key","length","Repo","issue_data","onClick","_","clickHandler","index","stargazers","PageLink","is_current","num","handleClick","Navigation","current_page","page_links","Array","from","total_pages","role","RepoTable","state","issue_states","Set","Map","bind","new_issue_states","new_issue_data","has","delete","setState","add","match","set","repos","Root","search_results","undefined","latest_search","search_performed","handleNavClick","event","preventDefault","split","result","parsed_result","target","new_total_pages","navigation","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f1347d0.chunk.js","sourcesContent":["const axios = require('axios')\nconst instance = axios.create({\n    baseURL: 'https://api.github.com'})\n\nfunction search(keywords, page, sort='stars', order='desc') {\n    const search_string = \n        '/search/repositories?' + \n        'q=' + keywords.join('+') + \n        '&sort=' + sort +\n        '&order=' + order +\n        '&page=' + page +\n        '&per_page=' + String(30)\n    return instance.get(search_string)\n}\n\nfunction parse_response(response) {\n    return (\n        response.data.items.map(({\n            full_name, \n            html_url, \n            stargazers_count, \n            description,\n            language}) => ({\n                full_name, \n                html_url, \n                description,\n                stargazers_count, \n                language})))\n}\n\nfunction get_issues(repo) {\n    const query_str = 'https://api.github.com/repos/' + repo + '/issues' + '?labels=good%20first%20issue'\n    return instance.get(query_str)\n}\n\nfunction parse_issues(issues) {\n    let new_issues = \n        issues.data.map(({title, labels, html_url}) => ({title, labels, html_url}))\n    for (const issue of new_issues) {\n        issue.labels = issue.labels.map(label=>label.name)\n    }\n    return new_issues\n}\n\nsearch(['pytorch'], 1).then(data=>console.log('FIRST SEARCH: ', data))\nsearch(['pytorch'], 2).then(data=>console.log('SECOND SEARCH: ', data))\n\nexport { search, parse_response, get_issues, parse_issues }","import React, { Fragment } from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { search, parse_response, get_issues, parse_issues } from './api.js'\n\n/*\nvar mock_repo = {\n  stargazers_count: 981,\n  full_name: 'node',\n  description: 'some project related info',\n  html_url: 'https://example.com'\n}\n\nvar mock_issue = {\n  name: 'issue_name',\n  labels: ['tag1', 'tag2', 'tag3'],\n  html_url: 'https://example.com'\n}\n*/\n\nclass SearchForm extends React.Component {\n  render() {\n    return (\n      <form onSubmit={this.props.handleSubmit} className='search field has-addons'>\n        <div className='control'>\n          <input\n            className='search-fld input'\n            type='text'\n            placeholder='Your languages of choice...'\n            value={this.props.input_value}\n            onChange={this.props.handleChange} />\n        </div>\n        <div className='control'>\n          <input\n            className='submit-btn button is-info'\n            type='submit'\n            value='Search' />\n        </div>\n      </form>\n    )\n  }\n}\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <div className='header'>\n        <ul>\n          <li className='logo' />\n          <li className='search-bar'>\n            <SearchForm\n              handleSubmit={this.props.handleSubmit}\n              handleChange={this.props.handleChange}\n              inputValue={this.props.inputValue} />\n          </li>\n        </ul>\n      </div>\n    )\n  }\n}\n\nclass Issue extends React.Component {\n  render() {\n    return (\n      <tr className='issue'>\n        <td className='column-1 border-right border-left'><div>\n          <a href={this.props.html_url}>{this.props.name}</a>\n        </div></td>\n        <td className='column-2 border-right'><div className='tags'>\n          {this.props.labels.map((label) => (\n            <span className='tag is-light'>{label}</span>\n          ))}\n        </div></td>\n        <td className='column-3 boder-right'><div></div></td>\n      </tr>\n    )\n\n  }\n}\n\nclass IssueRows extends React.Component {\n  render() {\n    let issues = this.props.data\n      ? this.props.data.map((p, i) => (\n        <Issue name={p.title}\n          labels={p.labels}\n          html_url={p.html_url}\n          key={i} />))\n      : <Fragment></Fragment>\n    if (issues.length == 0) {\n      issues =\n        <tr className='issue'>\n          <td className='column-1 border-right border-left'><div></div></td>\n          <td className='column-2 border-right'>\n            <div className='notification is-danger is-light'>\n              No issues found</div></td>\n          <td className='column-3 boder-right'><div></div></td>\n        </tr>\n    }\n    return (\n      <Fragment>\n        {issues}\n      </Fragment>\n    )\n  }\n}\n\nclass Repo extends React.Component {\n  render() {\n    const issues = this.props.issue_data\n      ? <IssueRows data={this.props.issue_data} />\n      : <Fragment></Fragment>\n    return (\n      <Fragment>\n        <tr className='repo'>\n          <td className='column-1 border-right border-left'><div>\n            <a href={this.props.html_url}>{this.props.name}</a></div></td>\n          <td className='column-2 border-right'\n            onClick={_ => this.props.clickHandler(this.props.index)}><div>\n              {this.props.description}</div></td>\n          <td className='column-3 border-right'><div>{this.props.stargazers}</div></td>\n        </tr>\n        {issues}\n      </Fragment>\n    )\n  }\n}\n\nclass PageLink extends React.Component {\n  render() {\n    const is_current = this.props.is_current ? ' is-current' : ''\n    const num = this.props.num\n    return (\n      <li><a className={'pagination-link' + is_current} \n             onClick={_=>this.props.handleClick(num)}>\n               {num}\n          </a>\n      </li>\n    )\n  }\n}\n\nclass Navigation extends React.Component {\n  render() {\n    const current_page = this.props.current_page\n\n    let page_links = Array.from({length: this.props.total_pages}, \n      (_, i)=>(\n        <PageLink handleClick={this.props.handleClick} num={i+1}/>\n      ))\n    page_links[current_page-1] = \n      <PageLink handleClick={this.props.handleClick} \n                num={current_page}\n                is_current/>\n    return (\n      <nav className='pagination' role='naviagtion'>\n        <ul className='pagination-list'>\n          {page_links}\n          <li><span className='pagination-ellipsis'>&hellip;</span></li>\n        </ul>\n      </nav>\n    )\n  }\n}\n\nclass RepoTable extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      issue_states: new Set(),\n      issue_data: new Map()\n    }\n\n    this.clickHandler = this.clickHandler.bind(this)\n  }\n\n  async clickHandler(i) {\n    console.log('clicked ' + String(i) + ' description')\n    let new_issue_states = new Set(this.state.issue_states)\n    let new_issue_data = new Map(this.state.issue_data)\n\n    if (new_issue_states.has(i)) {\n      new_issue_states.delete(i)\n      new_issue_data.delete(i)\n      this.setState({\n        issue_data: new_issue_data,\n        issue_states: new_issue_states\n      })\n    } else {\n      new_issue_states.add(i)\n      let repo = this.props.data[i].html_url\n        .match(/^https:\\/\\/github\\.com\\/(.*)$/)[1]\n      let issues = await get_issues(repo)\n      new_issue_data.set(i, parse_issues(issues))\n      console.log('Issue data updated for ', i, ' : ', new_issue_data)\n      this.setState({\n        issue_data: new_issue_data,\n        issue_states: new_issue_states\n      })\n    }\n  }\n\n  render() {\n    const repos = this.props.data\n      ?\n      this.props.data.map((p, i) => (\n        <Repo name={p.full_name}\n          description={p.description}\n          stargazers={p.stargazers_count}\n          html_url={p.html_url}\n          clickHandler={this.clickHandler}\n          key={i}\n          index={i}\n          issue_data={this.state.issue_data.get(i)} />))\n      :\n      <tr></tr>\n\n    return (\n      <table className='repo-list table is-striped is-hoverable is-fullwidth'>\n        <thead>\n          <tr className='header border-bottom'>\n            <th className='column-1 border-right border-left'><div>Project</div></th>\n            <th className='column-2 border-right'><div>Description</div></th>\n            <th className='column-3 border-right'><div>Stars</div></th>\n          </tr>\n        </thead>\n        <tbody>\n          {repos}\n        </tbody>\n      </table>\n    )\n  }\n}\n\nclass Root extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      input_value: '',\n      search_results: undefined,\n      current_page: 1,\n      latest_search: undefined,\n      total_pages: 2,\n      search_performed: false\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.handleNavClick = this.handleNavClick.bind(this)\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault()\n    let result = await search(this.state.input_value.split(' '), this.state.current_page)\n    let parsed_result = parse_response(result)\n    this.setState({\n      ...this.state,\n      search_results: parsed_result,\n      current_page: 1,\n      latest_search: this.state.input_value,\n      search_performed: true\n    })\n  }\n\n  handleChange(event) {\n    this.setState({\n      ...this.state,\n      input_value: event.target.value\n    })\n  }\n\n  async handleNavClick(i) {\n    console.log('switching to page ', i, ' ...')\n    const total_pages = this.state.total_pages\n    const new_total_pages = i >= total_pages ? (total_pages + 1) : total_pages\n    let result = await search(this.state.input_value.split(' '), i)\n    let parsed_result = parse_response(result)\n    this.setState({\n      ...this.state,\n      search_results: parsed_result,\n      current_page: i,\n      total_pages: new_total_pages\n    })\n  }\n\n  render() {\n    const navigation = this.state.search_performed\n    ?\n      <Navigation\n        current_page={this.state.current_page}\n        total_pages={this.state.total_pages}\n        handleClick={this.handleNavClick}/>\n    : <Fragment/>\n    return (\n      <div className='main'>\n        <Header\n          handleSubmit={this.handleSubmit}\n          handleChange={this.handleChange}\n          inputValue={this.state.input_value}/>\n        <RepoTable\n          data={this.state.search_results}/>\n        {navigation}\n      </div>\n    )\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Root />,\n  document.getElementById('root')\n);"],"sourceRoot":""}